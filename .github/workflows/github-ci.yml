name: Project CI
on: [push]
env:
  JAVA_DISTRIBUTION: "temurin"
  JAVA_VERSION: "17"
  ARTIFACT_FILES: |
    src
    gradle.properties
    build.gradle
    settings.gradle
    gradlew
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Compile project
        run: ./gradlew build -x test
      - uses: actions/upload-artifact@master
        with:
          name: source
          retention-days: 1
          path: ${{ env.ARTIFACT_FILES }}
  tests:
    name: Run JUnit tests
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/download-artifact@master
        with:
          name: source
          path: ${{ env.ARTIFACT_FILES }}
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Run JUnit
        run: ./gradlew test -x build
      - name: Archive JUnit result
        uses: actions/upload-artifact@v3
        with:
          name: junit-report
          path: build/reports/junit
      - name: Archive Jacoco Coverage result
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-coverage-report
          path: build/reports/jacoco
#  sonar:
#    name: Run SonarQube inspections
#    runs-on: ubuntu-latest
#    needs:
#      - build
#    steps:
#      - uses: actions/download-artifact@master
#        with:
#          name: source
#          path: ${{ env.ARTIFACT_FILES }}
#      - name: Set up JDK
#        uses: actions/setup-java@v3
#        with:
#          distribution: ${{ env.JAVA_DISTRIBUTION }}
#          java-version: ${{ env.JAVA_VERSION }}
#          cache: 'gradle'
#      - name: Setup Gradle
#        uses: gradle/gradle-build-action@v2
#      - name: Run SonarQube analysis
#        if: github.ref != 'refs/heads/master'
#        run: ./gradlew sonarqube
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#      - name: Run SonarQube analysis
#        if: github.ref == 'refs/heads/master'
#        run: ./gradlew sonarqube
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          SONAR_SCANNER_OPTS: "-Dsonar: qualitygate.wait=true"
