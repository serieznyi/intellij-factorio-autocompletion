name: Project CI
on:
  pull_request: # all PRs
  push:
    branches:
    - master
env:
  JAVA_DISTRIBUTION: "temurin"
  JAVA_VERSION: "17"
  GRADLE_BUILD_ACTION_CACHE_DEBUG_ENABLED: true
  ACTIONS_STEP_DEBUG: true
  ARTIFACT_FILES: .
jobs:
  build:
    name: Build, Test and Analyse
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
      - name: Compile project
        id: gradle
        run: ./gradlew testClasses
      - name: "Add Build Scan URL as PR comment"
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request' && failure()
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.checks.create({
              name: "Gradle Scan Result Link",
              head_sha: context.sha,
              owner: context.repo.owner,
              repo: context.repo.name,
              details_url: '${{ steps.gradle.outputs.build-scan-url }}',
              output.title: '❌ `${{ github.workflow }}` failed',
              output.summary: '❌ `${{ github.workflow }}` failed: ${{ steps.gradle.outputs.build-scan-url }}'
            })
      - name: Upload build reports
        uses: actions/upload-artifact@v3
        with:
          name: build-reports
          path: build/reports/
      - name: Run JUnit
        run: ./gradlew test
      - name: Archive JUnit result
        uses: actions/upload-artifact@v3
        with:
          name: junit-report
          path: build/reports/junit
      - name: Archive Jacoco Coverage result
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-coverage-report
          path: build/reports/jacoco
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - run: git fetch --all
      - name: Run SonarQube analysis with Quality Gates
        if: github.ref != 'refs/heads/master'
        run: ./gradlew sonarqube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Run SonarQube analysis
        if: github.ref == 'refs/heads/master'
        run: ./gradlew sonarqube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_SCANNER_OPTS: "-Dsonar.qualitygate.wait=true -Dsonar.projectVersion=$CI_COMMIT_TAG"